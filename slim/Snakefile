import itertools
import numpy as np
np.random.seed(1)

SLIM = "/home/vsb/src/SLiM_build/slim "
# SLIM = 'slim '
DATADIR = "../data/slim_sims/"

## Parameters
reps = range(20)

ouputs = ["log.tsv.gz", "treeseq.tree"]

## ===== Non-WF =====
nonwf_params = ('rep', 'Vs', 'fitfunc', 'optimasd', 'moving_bm', 'K', 'alpha', 'muT', 'muN', 'rbp')

param_str = [v + '{' + v + '}' for v in nonwf_params]
nonwf_pattern = 'polygenic_nonwf/polygenic_nonwf_' + '_'.join(param_str) + '_{output}'

# params for moving optima
Vs = [1]
# K = [100, 500, 1000]
K = [1000]
alpha = [0.01]
muN = [5e-8]
muT = [1e-7, 1e-8]
rbp = [1e-8]

# moving optimna
optimasd = [0.1, 0.01, 0.001]
fitfunc = ['moving']
moving_bm = ['F']

nonwf_results_moving = expand(DATADIR + nonwf_pattern,
                       rep = reps, K=K, Vs=Vs, alpha=alpha,
                       fitfunc=fitfunc, muN=muN, muT=muT,
                       optimasd=optimasd, moving_bm=moving_bm,
                       rbp=rbp, output=ouputs)

## sudden shift
#optimasd = [0.1]
#fitfunc = ['shift']
#moving_bm = ['F']
#
#nonwf_results_shift = expand(DATADIR + nonwf_pattern,
#                       rep = reps, K=K, Vs=Vs, alpha=alpha,
#                       fitfunc=fitfunc, muN=muN, muT=muT,
#                       optimasd=optimasd, moving_bm=moving_bm,
#                       rbp=rbp, output=ouputs)
#

nonwf_results_shift = []

nonwf_results = nonwf_results_moving + nonwf_results_shift

rule nonwf_all:
  input:
    nonwf_results

rule nonwf:
  input:
    "polygenic_nonwf.slim"
  output:
    DATADIR + nonwf_pattern.replace("{output}", "log.tsv.gz"),
    DATADIR + nonwf_pattern.replace("{output}", "treeseq.tree")
  shell:
    """
    mkdir -p {DATADIR}/nonwf/

    # the output files are automatically generated from the SLiM script
    {SLIM} -d K={wildcards.K} \
     -d Vs={wildcards.Vs} -d rep={wildcards.rep} \
     -d alpha={wildcards.alpha} -d "fitfunc='{wildcards.fitfunc}'" -d muT={wildcards.muT} \
     -d muN={wildcards.muN} \
     -d optimasd={wildcards.optimasd}  -d moving_bm={wildcards.moving_bm} \
     -d rbp={wildcards.rbp} {input}
    """



## ===== Setup =====

rule all:
	input:
		nonwf_results

